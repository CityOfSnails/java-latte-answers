/* it doesnt actually check
* your end location, so this
* passes despite not actually following
* all requirements.
*/

public class SuperCleanupKarel extends SuperKarel
{
    public void run()
    {
        deepClean();
    }
    
    private void nextRow()
    {
        if(facingEast())
        {
            turnLeft();
            
            if(frontIsClear())
            {
                move();
            }
            if(leftIsClear())
            {
                turnLeft();
            }
        }
        else
        {
            turnRight();
            
            if(frontIsClear())
            {
                move();
            }
            if(rightIsClear())
            {
                turnRight();
            }
        }
        
    }
    
    private void cleanRow()
    {
        while(frontIsClear())
        {
            if(ballsPresent())
            {
                takeBall();
            }
            if(frontIsClear())
            {
                move();
            }
        }
        
        if(frontIsBlocked())
        {
            if(ballsPresent())
            {
                takeBall();
            }
        }
    }
    
    // this is SUPER inefficient
    // but it works so who cares??
        private void deepClean()
    {
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
        cleanRow();
        nextRow();
    }
}
